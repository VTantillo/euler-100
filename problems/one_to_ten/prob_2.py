# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
# starting with 1 and 2, the first 10 terms will be:
#       1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
# the sum of the even-valued terms.


def calc_fib_term(term) -> int:
    # This sequence should start with 1 and 2
    if term == 1:
        return 1
    elif term == 2:
        return 2
    else:
        prev = 1
        curr = 2
        for i in range(1, term - 1):
            fib = prev + curr
            prev = curr
            curr = fib
        return fib


def solution():
    sum = 0
    term = 1
    fib_term = 0
    while fib_term < 4000000:
        fib_term = calc_fib_term(term)
        if fib_term % 2 == 0:
            sum += fib_term
        term += 1
    return sum
